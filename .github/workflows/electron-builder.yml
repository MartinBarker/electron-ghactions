name: Build/release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    env:
      is_tag: ${{ startsWith(github.ref, 'refs/tags/v') }}
      SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_TOKEN }}

    strategy:
      matrix:
#        os: [macos-latest, ubuntu-latest, windows-latest]
        os: [macos-latest]

    steps:
      - run: git config --global core.autocrlf false

      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

       # Because of timeout issue https://github.com/yarnpkg/yarn/issues/4890
      - run: yarn install --immutable --network-timeout 1000000

      - name: (mas) Save provisioning profile
        if: startsWith(matrix.os, 'macos')
        env:
          PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
        run: |
          echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode > splitBySilence_macAppStore.provisionprofile

      - name: (MacOS) Prepare for app notarization
        # Import Apple API key for uploading to Mac App Store and for notarization
        if: startsWith(matrix.os, 'macos')
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.APPLE_API_KEY }}' > ~/private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"), release the app after building
          release: ${{ env.is_tag == 'true' }}

          max_attempts: 1

          mac_certs: ${{ secrets.MAC_CERTS }}
          mac_certs_password: ${{ secrets.MAC_CERTS_PASSWORD }}

          env:
            # macOS notarization API key
            API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
            API_KEY_ISSUER_ID: ${{ secrets.APPLE_API_ISSUER }}
